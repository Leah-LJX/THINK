{"description": "Sets the URL text to the specified text and sends a <code>TitleChangeEvent</code> to all registered listeners", "package": "org.jfree.chart", "method_declaration": "public void setURLText(String text)"}
{"description": "Confirm that cloning works", "package": "org.jfree.chart", "method_declaration": "public void testCloning()"}
{"description": "Sets the range axis for the plot. An exception is thrown if the new axis and the plot are not mutually compatible", "package": "org.jfree.chart", "method_declaration": "public void setRangeAxis(ValueAxis axis)"}
{"description": "Sets the tick unit for the axis and, if requested, sends an <code>AxisChangeEvent</code> to all registered listeners. In addition, an option is provided to turn off the \"auto-select\" feature for tick units (you can restore it using the <code>ValueAxis#setAutoTickUnitSelection(boolean)</code> method)", "package": "org.jfree.chart", "method_declaration": "public void setTickUnit(NumberTickUnit unit, boolean notify, boolean turnOffAutoSelect)"}
{"description": "Sets the display range. The values will be mapped to the fixed range if necessary", "package": "org.jfree.chart", "method_declaration": "public void setDisplayRange(double start, double end)"}
{"description": "Two objects that are equal are required to return the same hashCode", "package": "org.jfree.chart", "method_declaration": "public void testHashCode()"}
{"description": "Sets the series order and sends a <code>PlotChangeEvent</code> to all registered listeners. By default, the plot renders the primary series last (so that the primary series appears to be on top). You can reverse this if you want to", "package": "org.jfree.chart", "method_declaration": "public void setSeriesRenderingOrder(SeriesRenderingOrder order)"}
{"description": "Checks that the class implements PublicCloneable", "package": "org.jfree.chart", "method_declaration": "public void testPublicCloneable()"}
{"description": "Removes a series from the collection and sends a <code>DatasetChangeEvent</code> to all registered listeners", "package": "org.jfree.chart", "method_declaration": "public void removeSeries(XIntervalSeries<S> series)"}
{"description": "Notifies all registered listeners that the plot has been modified", "package": "org.jfree.chart", "method_declaration": "public void notifyListeners(PlotChangeEvent event)"}
{"description": "Sets the link margin and sends a <code>PlotChangeEvent</code> to all registered listeners", "package": "org.jfree.chart", "method_declaration": "public void setLabelLinkMargin(double margin)"}
{"description": "Sets the tick label type", "package": "org.jfree.chart", "method_declaration": "public void setTickLabelType(int type)"}
{"description": "Sets the label and sends a <code>DialLayerChangeEvent</code> to all registered listeners", "package": "org.jfree.chart", "method_declaration": "public void setLabel(String label)"}
{"description": "Applies the attributes for this theme to a <code>PeriodAxis</code>", "package": "org.jfree.chart", "method_declaration": "protected void applyToPeriodAxis(PeriodAxis axis)"}
{"description": "Remove the given text from the list of corner text items and sends a <code>PlotChangeEvent</code> to all registered listeners", "package": "org.jfree.chart", "method_declaration": "public void removeCornerTextItem(String text)"}
{"description": "Check that setting a tool tip generator for a series does override the default generator", "package": "org.jfree.chart", "method_declaration": "public void testSetSeriesToolTipGenerator()"}
{"description": "Returns a new instance based on an existing instance but with the bottom position changed", "package": "org.jfree.chart", "method_declaration": "public static CategoryLabelPositions replaceBottomPosition(CategoryLabelPositions base, CategoryLabelPosition bottom)"}
{"description": "Returns the total of the values in one column of the supplied data table", "package": "org.jfree.chart", "method_declaration": "public static double calculateColumnTotal(Values2D data, int column)"}
{"description": "Returns the text anchor that is used to align a label to its anchor point", "package": "org.jfree.chart", "method_declaration": "private TextAnchor textAlignPtForLabelAnchorV(RectangleAnchor anchor)"}
{"description": "Returns a new instance based on an existing instance but with the right position changed", "package": "org.jfree.chart", "method_declaration": "public static CategoryLabelPositions replaceRightPosition(CategoryLabelPositions base, CategoryLabelPosition right)"}
{"description": "This will control whether or not values are displayed within the charts labels", "package": "org.jfree.chart", "method_declaration": "public void toggleLabelValues(boolean res)"}
{"description": "Configures the color bar", "package": "org.jfree.chart", "method_declaration": "public void configure(ContourPlot plot)"}
{"description": "Auto range the range axis", "package": "org.jfree.chart", "method_declaration": "public static void autoRangeAxis(ChartPanel myChart)"}
{"description": "Find chartentities like JFreeChartEntity, AxisEntity, PlotEntity, TitleEntity, XY..", "package": "org.jfree.chart", "method_declaration": "public static ChartEntity findChartEntity(ChartCanvas chart, double mx, double my)"}
{"description": "Scales the range by the specified factor", "package": "org.jfree.chart", "method_declaration": "public static Range scale(Range base, double factor)"}
{"description": "Returns a new instance based on an existing instance but with the left position changed", "package": "org.jfree.chart", "method_declaration": "public static CategoryLabelPositions replaceLeftPosition(CategoryLabelPositions base, CategoryLabelPosition left)"}
{"description": "Returns the total of the values in one column of the supplied data table by taking only the row numbers in the array into account", "package": "org.jfree.chart", "method_declaration": "public static double calculateColumnTotal(Values2D data, int column, int[] validRows)"}
{"description": "Sets the X axis to display absolute time. This is the default", "package": "org.jfree.chart", "method_declaration": "public static void setAbsoluteAxis(JFreeChart chart)"}
{"description": "Returns a <code>KeyedValues</code> instance that contains the cumulative percentage values for the data in another <code>KeyedValues</code> instance. The percentages are values between 0.0 and 1.0 (where 1.0 = 100%)", "package": "org.jfree.chart", "method_declaration": "public static KeyedValues getCumulativePercentages(KeyedValues data)"}
{"description": "Tests translations between timelines", "package": "org.jfree.chart", "method_declaration": "public void verifyTranslations(SegmentedTimeline timeline, long startTest)"}
{"description": "Adds new exceptions to a timeline. The exceptions are the excluded segments from its base timeline", "package": "org.jfree.chart", "method_declaration": "private void fillInBaseTimelineExclusionsAsExceptions(SegmentedTimeline timeline, long from, long to)"}
{"description": "Checks that the two renderers are equal but independent of one another", "package": "org.jfree.chart", "method_declaration": "private boolean checkIndependence(LevelRenderer r1, LevelRenderer r2)"}
{"description": "Returns the total of the values in one row of the supplied data table", "package": "org.jfree.chart", "method_declaration": "public static double calculateRowTotal(Values2D data, int row)"}
{"description": "Returns a new instance based on an existing instance but with the top position changed", "package": "org.jfree.chart", "method_declaration": "public static CategoryLabelPositions replaceTopPosition(CategoryLabelPositions base, CategoryLabelPosition top)"}
{"description": "Sets the properties of the specified axis to match the properties defined on this panel", "package": "org.jfree.chart", "method_declaration": "public void setAxisProperties(Axis axis)"}
