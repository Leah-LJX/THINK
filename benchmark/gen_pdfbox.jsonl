{"description": "Extract all hyperlinks from a PDF file and save them to a CSV file", "package": "org.apache.pdfbox", "method_declaration": "public static void extractHyperlinks(String pdfFilePath, String csvOutputPath)"}
{"description": "Merge several PDF files into one, adding a watermark to each page of the merged document", "package": "org.apache.pdfbox", "method_declaration": "public static void mergePdfFilesWithWatermark(String[] pdfPaths, String outputPath, String watermarkText)"}
{"description": "Convert each page of a PDF document into a separate image file, adjusting the resolution based on page content", "package": "org.apache.pdfbox", "method_declaration": "public static void convertPdfToImages(String pdfFilePath, String imagesOutputDir, int resolution)"}
{"description": "Encrypt a PDF file with a user password and an owner password, restricting printing and copying", "package": "org.apache.pdfbox", "method_declaration": "public static void encryptPdf(String inputPdfPath, String outputPdfPath, String userPassword, String ownerPassword)"}
{"description": "Create a PDF document from a collection of image files, setting metadata such as title and author", "package": "org.apache.pdfbox", "method_declaration": "public static void createPdfFromImages(String[] imagePaths, String pdfOutputPath, Map<String, String> metadata)"}
{"description": "Split a PDF document into individual pages, each saved as a new PDF file, and apply a header and footer to each page", "package": "org.apache.pdfbox", "method_declaration": "public static void splitPdfAndAddHeaderFooter(String pdfFilePath, String outputDir, String headerText, String footerText)"}
{"description": "Automatically redact specific keywords in a PDF file and save the redacted version", "package": "org.apache.pdfbox", "method_declaration": "public static void redactKeywordsInPdf(String pdfFilePath, String outputPdfPath, String[] keywords)"}
{"description": "Extract the table of contents from a PDF file and print its structure to a JSON file", "package": "org.apache.pdfbox", "method_declaration": "public static void extractTableOfContentsToJson(String pdfFilePath, String jsonOutputPath)"}
{"description": "Generate a PDF report from a dataset, including charts and tables, and set document permissions", "package": "org.apache.pdfbox", "method_declaration": "public static void generatePdfReport(String dataPath, String pdfOutputPath)"}
{"description": "Perform OCR on scanned PDF documents to extract text and save the text in a structured format", "package": "org.apache.pdfbox", "method_declaration": "public static void performOcrOnPdf(String scannedPdfPath, String textOutputPath)"}
{"description": "Compare two PDF files page by page and highlight differences in a new PDF file", "package": "org.apache.pdfbox", "method_declaration": "public static void comparePdfFiles(String pdfFilePath1, String pdfFilePath2, String comparisonOutputPath)"}
{"description": "Analyze the layout of a PDF file and generate a report on its formatting styles (fonts, colors, spacing)", "package": "org.apache.pdfbox", "method_declaration": "public static void analyzePdfLayout(String pdfFilePath, String reportOutputPath)"}
{"description": "Create a PDF slideshow from a set of PDF files, setting transition effects and timings", "package": "org.apache.pdfbox", "method_declaration": "public static void createPdfSlideshow(String[] pdfFilePaths, String slideshowOutputPath, int[] transitionTimes)"}
{"description": "Extract annotations and comments from a PDF file and save them in a structured format", "package": "org.apache.pdfbox", "method_declaration": "public static void extractAnnotations(String pdfFilePath, String outputFilePath)"}
{"description": "Digitally sign a PDF file using a provided digital certificate and save the signed version", "package": "org.apache.pdfbox", "method_declaration": "public static void digitallySignPdf(String pdfFilePath, String signedPdfPath, String certificatePath, String certificatePassword)"}
{"description": "Batch process multiple PDF files to compress their size without significant loss of quality", "package": "org.apache.pdfbox", "method_declaration": "public static void compressMultiplePdfs(String[] pdfFilePaths, String outputDir)"}
{"description": "Create a fillable PDF form with various field types (text, checkbox, dropdown) and export it", "package": "org.apache.pdfbox", "method_declaration": "public static void createFillablePdfForm(String outputPath, Map<String, String> fieldTypes)"}
{"description": "Implement a PDF version converter to downgrade PDF files to an earlier version for compatibility", "package": "org.apache.pdfbox", "method_declaration": "public static void convertPdfVersion(String inputPdfPath, String outputPdfPath, String targetVersion)"}
{"description": "Extract embedded media files (audio, video) from a PDF document and save them to a specified directory", "package": "org.apache.pdfbox", "method_declaration": "public static void extractMediaFromPdf(String pdfFilePath, String mediaOutputDir)"}
{"description": "Generate a PDF calendar with customizable themes and holidays highlighted, and print user events", "package": "org.apache.pdfbox", "method_declaration": "public static void generatePdfCalendar(String year, String theme, Map<String, List<String>> holidays, Map<String, String> events, String outputPath)"}
