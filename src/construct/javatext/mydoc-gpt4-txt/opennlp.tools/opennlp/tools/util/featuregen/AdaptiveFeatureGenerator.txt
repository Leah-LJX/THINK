[API Name] opennlp.tools.util.featuregen.AdaptiveFeatureGenerator
[Type] Interface
[Info]
All Known Implementing Classes: AdditionalContextFeatureGenerator, AggregatedFeatureGenerator, BigramNameFeatureGenerator, BrownBigramFeatureGenerator, BrownTokenClassFeatureGenerator, BrownTokenFeatureGenerator, CachedFeatureGenerator, CharacterNgramFeatureGenerator, DictionaryFeatureGenerator, DocumentBeginFeatureGenerator, InSpanGenerator, OutcomePriorFeatureGenerator, PosTaggerFeatureGenerator, POSTaggerNameFeatureGenerator, PrefixFeatureGenerator, PreviousMapFeatureGenerator, PreviousTwoMapFeatureGenerator, SentenceFeatureGenerator, SuffixFeatureGenerator, TokenClassFeatureGenerator, TokenFeatureGenerator, TokenPatternFeatureGenerator, TrigramNameFeatureGenerator, WindowFeatureGenerator, WordClusterFeatureGenerator
public interface AdaptiveFeatureGenerator An interface for generating features for name entity identification and for  updating document level contexts.   Note:  Feature generation is not thread safe and a instance of a feature generator  must only be called from one thread. The resources used by a feature  generator are typically shared between many instances of features generators  which are called from many threads and have to be thread safe.
[Method Summary]
default void clearAdaptiveData()	Informs a feature generator that the context of the adaptive data (typically a document) is no longer valid.
void createFeatures(List<String> features, String[] tokens, int index, String[] previousOutcomes)	Adds the appropriate features for the token at the specified index with the specified array of previousOutcomes to the specified list of features.
default void updateAdaptiveData(String[] tokens, String[] outcomes)	Informs a feature generator that the specified tokens have been classified with the corresponding set of specified outcomes.