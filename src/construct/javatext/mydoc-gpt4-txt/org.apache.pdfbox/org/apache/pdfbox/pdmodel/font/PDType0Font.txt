[API Name] org.apache.pdfbox.pdmodel.font.PDType0Font
[Type] Class
[Info]
All Implemented Interfaces: COSObjectable, PDFontLike, PDVectorFont
public class PDType0Font extends PDFont implements PDVectorFont A Composite (Type 0) font.
Author: Ben Litchfield
[Constructor Summary]
PDType0Font(COSDictionary fontDictionary)	Constructor for reading a Type0 font from a PDF file.
[Field Summary]
PDType0Font(COSDictionary fontDictionary)	Constructor for reading a Type0 font from a PDF file.
[Method Summary]
void addGlyphsToSubset(Set<Integer> glyphIds)	
void addToSubset(int codePoint)	Adds the given Unicode point to the subset.
int codeToCID(int code)	Returns the CID for the given character code.
int codeToGID(int code)	Returns the GID for the given character code.
protected byte[] encode(int unicode)	Encodes the given Unicode code point for use in a PDF content stream.
byte[] encodeGlyphId(int glyphId)	Returns the encoded value for the given glyph ID.
float getAverageFontWidth()	This will get the average font width for all characters.
String getBaseFont()	Returns the PostScript name of the font.
org.apache.fontbox.util.BoundingBox getBoundingBox()	Returns the font's bounding box.
org.apache.fontbox.cmap.CMap getCMap()	Returns the font's CMap.
org.apache.fontbox.ttf.CmapLookup getCmapLookup()	Returns the CMap lookup table if present.
org.apache.fontbox.cmap.CMap getCMapUCS2()	Returns the font's UCS2 CMap, only present this font uses a predefined CMap.
PDCIDFont getDescendantFont()	Returns the descendant font.
Vector getDisplacement(int code)	Returns the displacement vector (w0, w1) in text space, for the given character.
PDFontDescriptor getFontDescriptor()	Returns the font descriptor, may be null.
Matrix getFontMatrix()	Returns the font matrix, which represents the transformation from glyph space to text space.
org.apache.fontbox.ttf.model.GsubData getGsubData()	Returns the GSubData if present.
float getHeight(int code)	Returns the height of the given character, in glyph space.
String getName()	Returns the name of this font, either the PostScript "BaseName" or the Type 3 "Name".
GeneralPath getNormalizedPath(int code)	Returns the normalized glyph path for the given character code in a PDF.
GeneralPath getPath(int code)	Returns the glyph path for the given character code.
Vector getPositionVector(int code)	Returns the position vector (v), in text space, for the given character.
protected float getStandard14Width(int code)	Returns the glyph width from the AFM if this is a Standard 14 font.
float getWidth(int code)	Returns the advance width of the given character, in glyph space.
float getWidthFromFont(int code)	Returns the width of a glyph in the embedded font file.
boolean hasExplicitWidth(int code)	Returns true if the Font dictionary specifies an explicit width for the given glyph.
boolean hasGlyph(int code)	Returns true if this font contains a glyph for the given character code in a PDF.
boolean isDamaged()	Returns true if the embedded font file is damaged.
boolean isEmbedded()	Returns true if the font file is embedded in the PDF.
boolean isStandard14()	Returns true if this font is one of the "Standard 14" fonts and receives special handling.
boolean isVertical()	Returns true if the font uses vertical writing mode.
static PDType0Font load(PDDocument doc, File file)	Loads a TTF to be embedded and subset into a document as a Type 0 font.
static PDType0Font load(PDDocument doc, InputStream input)	Loads a TTF to be embedded and subset into a document as a Type 0 font.
static PDType0Font load(PDDocument doc, InputStream input, boolean embedSubset)	Loads a TTF to be embedded into a document as a Type 0 font.
static PDType0Font load(PDDocument doc, org.apache.pdfbox.io.RandomAccessRead randomAccessRead, boolean embedSubset, boolean vertical)	Loads a TTF to be embedded into a document as a Type 0 font.
static PDType0Font load(PDDocument doc, org.apache.fontbox.ttf.TrueTypeFont ttf, boolean embedSubset)	Loads a TTF to be embedded into a document as a Type 0 font.
static PDType0Font loadVertical(PDDocument doc, File file)	Loads a TTF to be embedded into a document as a vertical Type 0 font.
static PDType0Font loadVertical(PDDocument doc, InputStream input)	Loads a TTF to be embedded into a document as a vertical Type 0 font.
static PDType0Font loadVertical(PDDocument doc, InputStream input, boolean embedSubset)	Loads a TTF to be embedded into a document as a vertical Type 0 font.
static PDType0Font loadVertical(PDDocument doc, org.apache.fontbox.ttf.TrueTypeFont ttf, boolean embedSubset)	Loads a TTF to be embedded into a document as a vertical Type 0 font.
int readCode(InputStream in)	Reads a character code from a content stream string.
void subset()	Replaces this font with a subset containing only the given Unicode characters.
String toString()	
String toUnicode(int code)	Returns the Unicode character sequence which corresponds to the given character code.
boolean willBeSubset()	Returns true if this font will be subset when embedded.
[Methods inherited from class org.apache.pdfbox.pdmodel.font.PDFont]
encode, equals, getCOSObject, getSpaceWidth, getStandard14AFM, getStringWidth, getSubType, getToUnicodeCMap, getType, getWidths, hashCode, readCMap, setFontDescriptor, toUnicode
[Methods inherited from class java.lang.Object]
clone, finalize, getClass, notify, notifyAll, wait, wait, wait