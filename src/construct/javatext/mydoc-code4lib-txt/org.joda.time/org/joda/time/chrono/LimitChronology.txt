[Class] org.joda.time.chrono.LimitChronology
[Flag] Class
[Info]
All Implemented Interfaces: Serializable
[Constructor Summary]

[Method Summary]
protected void assemble(AssembledChronology.Fields fields) Invoked by the constructor and after deserialization to allow subclasses to define all of its supported fields.
boolean equals(Object obj) A limit chronology is only equal to a limit chronology with the same base chronology and limits.
long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int millisOfDay) Returns a datetime millisecond instant, formed from the given year, month, day, and millisecond values.
long getDateTimeMillis(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) Returns a datetime millisecond instant, formed from the given year, month, day, hour, minute, second, and millisecond values.
long getDateTimeMillis(long instant, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond) Returns a datetime millisecond instant, from from the given instant, hour, minute, second, and millisecond values.
static LimitChronology getInstance(Chronology base, ReadableDateTime lowerLimit, ReadableDateTime upperLimit) Wraps another chronology, with datetime limits.
DateTime getLowerLimit() Returns the inclusive lower limit instant.
DateTime getUpperLimit() Returns the inclusive upper limit instant.
int hashCode() A suitable hashcode for the chronology.
String toString() A debugging string for the chronology.
Chronology withUTC() If this LimitChronology is already UTC, then this is returned.
Chronology withZone(DateTimeZone zone) If this LimitChronology has the same time zone as the one given, then this is returned.